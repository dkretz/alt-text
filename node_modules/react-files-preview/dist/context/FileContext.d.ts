/// <reference types="react" />
interface FileState {
    zoom: boolean;
    fileSrc: string | null;
    index: number;
    isImage: boolean;
    fileName: string | null;
    type: string | null;
    size: number;
}
interface ComponentState {
    showFileSize: boolean;
    showSliderCount: boolean;
    downloadFile: boolean;
    removeFile: boolean;
    rounded: boolean;
    fileHeight: string;
    fileWidth: string;
    disabled: boolean;
    allowEditing: boolean;
}
interface ImageEditorState {
    isEditing: boolean;
    index: number | null;
    file: File | null;
}
export interface InitialState {
    fileData: File[];
    fileState: FileState;
    componentState: ComponentState;
    imageEditorState: ImageEditorState;
}
export type FileAction = {
    type: "STORE_FILE_DATA";
    payload: {
        files: File[];
    };
} | {
    type: "SET_COMPONENT_STATE";
    payload: ComponentState;
} | {
    type: "APPEND_FILE_DATA";
    payload: {
        files: File[];
    };
} | {
    type: "STORE_FILE_STATE";
    payload: FileState;
} | {
    type: "SET_IMAGE_EDITOR_DATA";
    payload: ImageEditorState;
} | {
    type: "REMOVE_FILE_DATA";
    payload: File;
} | {
    type: "GET_NEXT_FILE";
} | {
    type: "GET_PREV_FILE";
};
export declare const fileReducer: (state: InitialState, action: any) => {
    fileData: any;
    fileState: FileState;
    componentState: ComponentState;
    imageEditorState: ImageEditorState;
} | {
    componentState: any;
    fileData: File[];
    fileState: FileState;
    imageEditorState: ImageEditorState;
} | {
    fileState: any;
    fileData: File[];
    componentState: ComponentState;
    imageEditorState: ImageEditorState;
} | {
    imageEditorState: any;
    fileData: File[];
    fileState: FileState;
    componentState: ComponentState;
};
export interface FileContext {
    state: InitialState;
    dispatch: (action: FileAction) => void;
}
export declare const FileContext: import("react").Context<FileContext>;
export declare const FileProvider: React.FC<{
    children: React.ReactNode;
}>;
export {};
